package adt;import java.util.Iterator;import java.util.function.Predicate;/** * @author Tongkitming/ Fong Wei Sheng/ Yu Yung Jun/ Ho Wei Young/ Low Su Yin * @version 2.0 * @param <T> */public interface ListInterface<T> {     public boolean add(T newEntry);    public boolean add(int newPosition, T newEntry);    public T remove(int givenPosition);    public void clear();    public boolean replace(int givenPosition, T newEntry);    public T getEntry(T entry);    public T getEntry(int givenPosition);    public boolean contains(T anEntry);    public int getNumberOfEntries();    public boolean isEmpty();    public boolean isFull();        public Iterator getIterator();    public int getPosition(T entry);      public boolean cNumberofGroup();    public void maxNumberofGroup(int entry);    public int getMaxNumberofGroup();    public T get(int index);        T find(String tutorName);    void listAll();    void filter(String criteria);    public T find(Predicate<T> predicate);    public void filter(Predicate<T> predicate);    public void bubbleSort(int[] entry);}